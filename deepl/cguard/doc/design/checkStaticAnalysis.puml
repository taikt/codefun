@startuml
actor User
participant "VSCode" as palette
participant "Web Server" as websrv #green
participant "Storage" as storage #yellow
box "Code Guard" #LightBlue
  participant "Controller" as controller
  participant "Static Analysis Engine" as staticEngine
  participant "Report Generator" as reportGen
end box
participant "Clang" as clang #orange
participant "Clang-Tidy" as clangtidy #orange
participant "Cppcheck" as cppcheck #orange

autonumber
User -> palette : Select "Check Static Analysis" command
palette -> controller : Trigger 'lgedv.checkStaticAnalysis' command
controller -> staticEngine : Start static analysis for open file
staticEngine -> clang : Run clang --analyze
staticEngine -> clangtidy : Run clang-tidy (LGEDV rules)
staticEngine -> cppcheck : Run cppcheck
clang --> staticEngine : Return result
clangtidy --> staticEngine : Return result
cppcheck --> staticEngine : Return result
staticEngine -> reportGen : Generate report (HTML/Markdown)
reportGen --> staticEngine : Return report file
staticEngine -> controller : Return analysis result & report path
controller -> storage : Write result/report to storage
User -> websrv : Open report in browser
websrv -> storage : Read report file
storage --> websrv : Return report content
websrv -> User : Display report
@enduml
