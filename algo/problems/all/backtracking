// pattern

try(i)
 kiem tra ket qua hien tai (dieu kien bien)
 for (moi candidate)
    cat tia: prunning
    chonj ung vien, update trang thai moi
    try(i+1)
    remove ung vien, hoi phuc trang thai cu

// practice
https://leetcode.com/problems/unique-paths-iii/
https://leetcode.com/problems/remove-invalid-parentheses/description/

int backtrack(STATE curr, OTHER_ARGUMENTS...) {
    if (BASE_CASE) {
        // modify the answer
        return 0;
    }

    int ans = 0;
    for (ITERATE_OVER_INPUT) {
        // modify the current state
        ans += backtrack(curr, OTHER_ARGUMENTS...)
        // undo the modification of the current state
    }

    return ans;
}

// Phan tich do phuc tap thoi gian
https://www.naukri.com/code360/library/recursion-backtracking-time-complexity

Neu ham de qui goi lai ham no K lan, va so lan tham Node tu dau toi ket thuc de qui cua moi nghiem la N (chieu sau de qui)
=> do phuc tap K^N
Ly giai:
tong so node cua tree day du = K^N-1 - moi node co K children, tong chieu sau N - so node tu root toi node la)
Nhu vay se tham (k^N-1) node => thoi gian xu ly tai moi node la hang so => tong time la O(K^N -1) = O(K^N)